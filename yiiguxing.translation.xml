<application>
  <component name="AppStorage">
    <histories>
      <item value="gap" />
      <item value="combination Sum" />
      <item value="has Colon" />
      <item value="org Type" />
      <item value="deploy" />
      <item value="preperation" />
      <item value="SELECT id,cusId, null as vendorId ,null as vccId,accountNo,businessTradeNo,businessType,tradeAmt,tmemo,voucherUrl,accountTradeNo,applyTime,applier,approveTime,approver,`status` ,approveReason,ticketSequence from business_trade_cus_account UNION ALL SELECT id,null as cusId ,vendorId, null as vccId,accountNo,businessTradeNo,businessType,tradeAmt,tmemo,voucherUrl,accountTradeNo,applyTime,applier,approveTime,approver,`status` ,approveReason,ticketSequence from business_trade_vendor_account UNION ALL SELECT id,null as cusId ,null as vendorId, vccId,accountNo,businessTradeNo,businessType,tradeAmt,tmemo,voucherUrl,accountTradeNo,applyTime,applier,approveTime,approver,`status` ,approveReason,ticketSequence from business_trade_vcc_account where 1=1 and businessType=1 and status=0 order by applyTime limit ?,?" />
      <item value="notification" />
      <item value="multiply" />
      <item value="Autowired" />
      <item value="slots" />
      <item value="handle Search Info Fn" />
      <item value="Recordable" />
      <item value="reactive" />
      <item value="Listening to page changes and dynamically changing site titles" />
      <item value="bootstrap" />
      <item value="mount" />
      <item value="dark" />
      <item value="transition" />
      <item value="Is Calculate" />
      <item value="XML fragments parsed from previous mappers already contains value for com.trip.finance.refund.persistence.PlatformEndorseCusPriceMapper.myQueryCondition" />
      <item value="virtual" />
      <item value="divide" />
      <item value="get Had Clear Channel Order Nos" />
      <item value="had Clear Channel Order Nos" />
      <item value="total Tax Price" />
      <item value="repair Lose Order" />
      <item value="again Clear Amt Order" />
      <item value="Compares this object with the specified object for order. Returns a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the specified object. &lt;p&gt;The implementor must ensure &lt;tt&gt;sgn(x.compareTo(y)) == -sgn(y.compareTo(x))&lt;tt&gt; for all &lt;tt&gt;x&lt;tt&gt; and &lt;tt&gt;y&lt;tt&gt;. (This implies that &lt;tt&gt;x.compareTo(y)&lt;tt&gt; must throw an exception iff &lt;tt&gt;y.compareTo(x)&lt;tt&gt; throws an exception.) &lt;p&gt;The implementor must also ensure that the relation is transitive: &lt;tt&gt;(x.compareTo(y)&amp;gt;0 &amp;amp;&amp;amp; y.compareTo(z)&amp;gt;0)&lt;tt&gt; implies &lt;tt&gt;x.compareTo(z)&amp;gt;0&lt;tt&gt;. &lt;p&gt;Finally, the implementor must ensure that &lt;tt&gt;x.compareTo(y)==0&lt;tt&gt; implies that &lt;tt&gt;sgn(x.compareTo(z)) == sgn(y.compareTo(z))&lt;tt&gt;, for all &lt;tt&gt;z&lt;tt&gt;. &lt;p&gt;It is strongly recommended, but &lt;i&gt;not&lt;i&gt; strictly required that &lt;tt&gt;(x.compareTo(y)==0) == (x.equals(y))&lt;tt&gt;. Generally speaking, any class that implements the &lt;tt&gt;Comparable&lt;tt&gt; interface and violates this condition should clearly indicate this fact. The recommended language is &quot;Note: this class has a natural ordering that is inconsistent with equals.&quot; &lt;p&gt;In the foregoing description, the notation &lt;tt&gt;sgn(&lt;tt&gt;&lt;i&gt;expression&lt;i&gt;&lt;tt&gt;)&lt;tt&gt; designates the mathematical &lt;i&gt;signum&lt;i&gt; function, which is defined to return one of &lt;tt&gt;-1&lt;tt&gt;, &lt;tt&gt;0&lt;tt&gt;, or &lt;tt&gt;1&lt;tt&gt; according to whether the value of &lt;i&gt;expression&lt;i&gt; is negative, zero or positive. @param o the object to be compared. @return a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the specified object. @throws NullPointerException if the specified object is null @throws ClassCastException if the specified object's type prevents it from being compared to this object." />
      <item value="transfer To" />
      <item value="get Original Filename" />
      <item value="unresolvable" />
      <item value="is Blank" />
      <item value="Finance Business Trade" />
      <item value="Mixture" />
      <item value="Subscribe to this {@link Mono} and &lt;strong&gt;block indefinitely&lt;strong&gt; until a next signal is received. Returns that value, or null if the Mono completes empty. In case the Mono errors, the original exception is thrown (wrapped in a {@link RuntimeException} if it was a checked exception). &lt;p&gt; &lt;img class=&quot;marble&quot; src=&quot;doc-filesmarblesblock.svg&quot; alt=&quot;&quot;&gt; &lt;p&gt; Note that each block() will trigger a new subscription: in other words, the result might miss signal from hot publishers. @return T the result" />
      <item value="Authentication Entry Point" />
      <item value="management" />
      <item value="exposure" />
      <item value="authorities" />
      <item value="credentials" />
      <item value="principal" />
      <item value="This constructor should only be used by &lt;code&gt;AuthenticationManager&lt;code&gt; or &lt;code&gt;AuthenticationProvider&lt;code&gt; implementations that are satisfied with producing a trusted (i.e. {@link isAuthenticated()} = &lt;code&gt;true&lt;code&gt;) authentication token." />
      <item value="ignoring" />
      <item value="ignoring the exception and continuing" />
      <item value="handle Events With" />
      <item value="excludes" />
      <item value="Message Digest" />
      <item value="adjust" />
      <item value="segment Amt Configs" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="132" />
        <entry key="ENGLISH" value="133" />
        <entry key="IRISH" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="SLOVENIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1649215385693" />
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
  </component>
</application>