<application>
  <component name="AppStorage">
    <histories>
      <item value="send Challenge" />
      <item value="Lifecycle Bean Post Processor" />
      <item value="is Access Allowed" />
      <item value="Unauthorized Exception" />
      <item value="捕捉Unauthorized Exception" />
      <item value="delivery Complete" />
      <item value="truncated" />
      <item value="invalid comparison: java.util.Date and java.lang.String" />
      <item value="comparison" />
      <item value="connection Lost" />
      <item value="Sets the quality of service for this message. &lt;ul&gt; &lt;li&gt;Quality of Service 0 - indicates that a message should be delivered at most once (zero or one times). The message will not be persisted to disk, and will not be acknowledged across the network. This QoS is the fastest, but should only be used for messages which are not valuable - note that if the server cannot process the message (for example, there is an authorization problem), then an {@link MqttCallbackdeliveryComplete(IMqttDeliveryToken)}. Also known as &quot;fire and forget&quot;.&lt;li&gt; &lt;li&gt;Quality of Service 1 - indicates that a message should be delivered at least once (one or more times). The message can only be delivered safely if it can be persisted, so the application must supply a means of persistence using &lt;code&gt;MqttConnectOptions&lt;code&gt;. If a persistence mechanism is not specified, the message will not be delivered in the event of a client failure. The message will be acknowledged across the network. This is the default QoS.&lt;li&gt; &lt;li&gt;Quality of Service 2 - indicates that a message should be delivered once. The message will be persisted to disk, and will be subject to a two-phase acknowledgement across the network. The message can only be delivered safely if it can be persisted, so the application must supply a means of persistence using &lt;code&gt;MqttConnectOptions&lt;code&gt;. If a persistence mechanism is not specified, the message will not be delivered in the event of a client failure.&lt;li&gt; &lt;ul&gt; If persistence is not configured, QoS 1 and 2 messages will still be delivered in the event of a network or server problem as the client will hold state in memory. If the MQTT client is shutdown or fails and persistence is not configured then delivery of QoS 1 and 2 messages can not be maintained as client-side state will be lost. @param qos the &quot;quality of service&quot; to use. Set to 0, 1, 2. @throws IllegalArgumentException if value of QoS is not 0, 1 or 2. @throws IllegalStateException if this message cannot be edited" />
      <item value="banner" />
      <item value="special" />
      <item value="displacement" />
      <item value="the number of threads in the pool" />
      <item value="millis" />
      <item value="truncate" />
      <item value="Feature that determines whether Date (and datetime) values (and Date-based things like {@link java.util.Calendar}s) are to be serialized as numeric timestamps (true; the default), or as something else (usually textual representation). If textual representation is used, the actual format is one returned by a call to {@link com.fasterxml.jackson.databind.SerializationConfiggetDateFormat}: the default setting being {@link com.fasterxml.jackson.databind.util.StdDateFormat}, which corresponds to format String of &quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot; (see {@link java.text.DateFormat} for details of format Strings). &lt;p&gt; Note: whether this feature affects handling of other date-related types depend on handlers of those types, although ideally they should use this feature &lt;p&gt; Note: whether {@link java.util.Map} keys are serialized as Strings or not is controlled using {@link WRITE_DATE_KEYS_AS_TIMESTAMPS}. &lt;p&gt; Feature is enabled by default, so that datetime are by default serialized as timestamps." />
      <item value="duration" />
      <item value="credits" />
      <item value="select Loan By Id" />
      <item value="Type handler was null on parameter mapping for property 'params'. It was either not specified andor could not be found for the javaType (java.util.Map) : jdbcType (null) combination." />
      <item value="Transient" />
      <item value="store id" />
      <item value="Ignore Auth" />
      <item value="is Pre Flight Request" />
      <item value="This {@code doFilter} implementation stores a request attribute for &quot;already filtered&quot;, proceeding without filtering again if the attribute is already there. @see getAlreadyFilteredAttributeName @see shouldNotFilter @see doFilterInternal" />
      <item value="do Filter Internal" />
      <item value="focus Cleanup" />
      <item value="overflow" />
      <item value="Set whether any jobs defined on this SchedulerFactoryBean should overwrite existing job definitions. Default is &quot;false&quot;, to not overwrite already registered jobs that have been read in from a persistent job store." />
      <item value="type Aliases Package" />
      <item value="inventory Auto" />
      <item value="inventory" />
      <item value="chip" />
      <item value="bill" />
      <item value="apply" />
      <item value="inform" />
      <item value="finance" />
      <item value="applet" />
      <item value="advertise" />
      <item value="access" />
      <item value="Circle" />
      <item value="size Circle" />
      <item value="concrete" />
      <item value="Create a predicate for testing the arguments for equality. @param x expression @param y object @return equality predicate" />
      <item value="create Query" />
      <item value="get Criteria Builder" />
      <item value="flag" />
      <item value="assignable From" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="237" />
        <entry key="ENGLISH" value="238" />
        <entry key="IRISH" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="SLOVENIAN" value="1" />
        <entry key="SPANISH" value="3" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1662346223565" />
  </component>
</application>