<application>
  <component name="AppStorage">
    <histories>
      <item value="return" />
      <item value="car Garage Audit History Service" />
      <item value="car Garage" />
      <item value="constant" />
      <item value="no further information" />
      <item value="set Recipients" />
      <item value="Returns a stream consisting of the elements of this stream that match the given predicate. &lt;p&gt;This is an &lt;a href=&quot;package-summary.htmlStreamOps&quot;&gt;intermediate operation&lt;a&gt;. @param predicate a &lt;a href=&quot;package-summary.htmlNonInterference&quot;&gt;non-interfering&lt;a&gt;, &lt;a href=&quot;package-summary.htmlStatelessness&quot;&gt;stateless&lt;a&gt; predicate to apply to each element to determine if it should be included @return the new stream" />
      <item value="switch" />
      <item value="passageway id" />
      <item value="set Most Credible Location" />
      <item value="allow Credentials" />
      <item value="deprecated" />
      <item value="Abstract adapter class for the {@link AsyncHandlerInterceptor} interface, for simplified implementation of pre-onlypost-only interceptors. @author Juergen Hoeller @since 05.12.2003 @deprecated as of 5.3 in favor of implementing {@link HandlerInterceptor} andor {@link AsyncHandlerInterceptor} directly." />
      <item value="Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true." />
      <item value="{&quot;ENTERPRISE_BUSINESS_CARD_OCR_STATUS&quot;: &quot;艾科瑞特，让企业业绩长青&quot;, &quot;ENTERPRISE_NAME_CH&quot;: &quot;天津双信诚工程机械租赁有限公司&quot;, &quot;ENTERPRISE_STATUS&quot;: &quot;存续&quot;, &quot;ENTERPRISE_REGISTER_ID&quot;: &quot;&quot;, &quot;ENTERPRISE_ID&quot;: &quot;91120110MA06902D08&quot;, &quot;ENTERPRISE_REGISTER_ADDRESS&quot;: &quot;天津市西青区大寺镇南里八口村津港公路与芦北路交口往南200米&quot;, &quot;ENTERPRISE_COUNTRY_ID&quot;: &quot;120111&quot;, &quot;ENTERPRISE_PROVINCE&quot;: &quot;天津市&quot;, &quot;ENTERPRISE_CITY&quot;: &quot;天津市&quot;, &quot;ENTERPRISE_DISTRICT&quot;: &quot;西青区&quot;, &quot;ENTERPRISE_BANK_ADDRESS&quot;: &quot;天津市西青区大寺镇南里八口村津港公路与芦北路交口往南200米&quot;, &quot;ENTERPRISE_TEL&quot;: &quot;&quot;, &quot;ENTERPRISE_BANK_NAME&quot;: &quot;&quot;, &quot;ENTERPRISE_BANK_COUNTRY_ID&quot;: &quot;120111&quot;, &quot;ENTERPRISE_BANK_PROVINCE&quot;: &quot;天津市&quot;, &quot;ENTERPRISE_BANK_CITY&quot;: &quot;天津市&quot;, &quot;ENTERPRISE_BANK_DISTRICT&quot;: &quot;西青区&quot;, &quot;ENTERPRISE_BANK_ID&quot;: &quot;&quot;, &quot;ENTERPRISE_OWNER&quot;: &quot;刘波&quot;, &quot;ENTERPRISE_CAPITAL&quot;: &quot;50万元&quot;, &quot;ENTERPRISE_TIME&quot;: &quot;2017年12月14日&quot;, &quot;ENTERPRISE_TYPE&quot;: &quot;有限责任公司(自然人独资)&quot;, &quot;ENTERPRISE_INDUSTRY&quot;: &quot;&quot;, &quot;ENTERPRISE_ORGANIZATION&quot;: &quot;&quot;, &quot;ENTERPRISE_USED_NAME&quot;: &quot;&quot;, &quot;ENTERPRISE_NAME_EN&quot;: &quot;&quot;, &quot;ENTERPRISE_INSURED&quot;: &quot;&quot;, &quot;ENTERPRISE_PEOPLE&quot;: &quot;&quot;, &quot;ENTERPRISE_SCOPE&quot;: &quot;&quot;, &quot;ENTERPRISE_VALID_DATE_START&quot;: &quot;2017年12月14日&quot;, &quot;ENTERPRISE_VALID_DATE_END&quot;: &quot;长期&quot;, &quot;ENTERPRISE_REGISTER_ADDRESS_CITY&quot;: &quot;天津市&quot;, &quot;ENTERPRISE_REGISTER_ADDRESS_DISTRICT&quot;: &quot;西青区&quot;, &quot;ENTERPRISE_REGISTER_ADDRESS_FORMAT_ADDRESS&quot;: &quot;天津市西青区大寺镇南里八口村津港公路芦北路&quot;, &quot;ENTERPRISE_REGISTER_ADDRESS_GPS&quot;: &quot;117.253232,39.001478&quot;, &quot;ENTERPRISE_REGISTER_ADDRESS_PROVINCE&quot;: &quot;天津市&quot;, &quot;ENTERPRISE_TAXPAYER_REGISTER_ID&quot;: &quot;91120110MA06902D08&quot;, &quot;ENTERPRISE_UNIVERSAL_CREDIT_ID_AGENCY_CODE&quot;: &quot;MA06902D-0&quot;}" />
      <item value="valid To Date" />
      <item value="Bean Post Processors" />
      <item value="eligible" />
      <item value="not eligible for auto-proxying" />
      <item value="recognize Business License" />
      <item value="assert As String" />
      <item value="Tea Exception" />
      <item value="Unrecognized" />
      <item value="Duty" />
      <item value="CLIENT ERROR" />
      <item value="REDIRECTION" />
      <item value="Series" />
      <item value="AUTHENTICATE HEADER" />
      <item value="authorization" />
      <item value="challenge" />
      <item value="Builds the challenge for authorization by setting a HTTP &lt;code&gt;401&lt;code&gt; (Unauthorized) status as well as the response's {@link AUTHENTICATE_HEADER AUTHENTICATE_HEADER}. &lt;p&gt; The header value constructed is equal to: &lt;p&gt; &lt;code&gt;{@link getAuthcScheme() getAuthcScheme()} + &quot; realm=\&quot;&quot; + {@link getApplicationName() getApplicationName()} + &quot;\&quot;&quot;;&lt;code&gt; @param request incoming ServletRequest, ignored by this implementation @param response outgoing ServletResponse @return false - this sends the challenge to be sent back" />
      <item value="send Challenge" />
      <item value="Lifecycle Bean Post Processor" />
      <item value="is Access Allowed" />
      <item value="Unauthorized Exception" />
      <item value="捕捉Unauthorized Exception" />
      <item value="delivery Complete" />
      <item value="truncated" />
      <item value="invalid comparison: java.util.Date and java.lang.String" />
      <item value="comparison" />
      <item value="connection Lost" />
      <item value="Sets the quality of service for this message. &lt;ul&gt; &lt;li&gt;Quality of Service 0 - indicates that a message should be delivered at most once (zero or one times). The message will not be persisted to disk, and will not be acknowledged across the network. This QoS is the fastest, but should only be used for messages which are not valuable - note that if the server cannot process the message (for example, there is an authorization problem), then an {@link MqttCallbackdeliveryComplete(IMqttDeliveryToken)}. Also known as &quot;fire and forget&quot;.&lt;li&gt; &lt;li&gt;Quality of Service 1 - indicates that a message should be delivered at least once (one or more times). The message can only be delivered safely if it can be persisted, so the application must supply a means of persistence using &lt;code&gt;MqttConnectOptions&lt;code&gt;. If a persistence mechanism is not specified, the message will not be delivered in the event of a client failure. The message will be acknowledged across the network. This is the default QoS.&lt;li&gt; &lt;li&gt;Quality of Service 2 - indicates that a message should be delivered once. The message will be persisted to disk, and will be subject to a two-phase acknowledgement across the network. The message can only be delivered safely if it can be persisted, so the application must supply a means of persistence using &lt;code&gt;MqttConnectOptions&lt;code&gt;. If a persistence mechanism is not specified, the message will not be delivered in the event of a client failure.&lt;li&gt; &lt;ul&gt; If persistence is not configured, QoS 1 and 2 messages will still be delivered in the event of a network or server problem as the client will hold state in memory. If the MQTT client is shutdown or fails and persistence is not configured then delivery of QoS 1 and 2 messages can not be maintained as client-side state will be lost. @param qos the &quot;quality of service&quot; to use. Set to 0, 1, 2. @throws IllegalArgumentException if value of QoS is not 0, 1 or 2. @throws IllegalStateException if this message cannot be edited" />
      <item value="banner" />
      <item value="special" />
      <item value="displacement" />
      <item value="the number of threads in the pool" />
      <item value="millis" />
      <item value="truncate" />
      <item value="Feature that determines whether Date (and datetime) values (and Date-based things like {@link java.util.Calendar}s) are to be serialized as numeric timestamps (true; the default), or as something else (usually textual representation). If textual representation is used, the actual format is one returned by a call to {@link com.fasterxml.jackson.databind.SerializationConfiggetDateFormat}: the default setting being {@link com.fasterxml.jackson.databind.util.StdDateFormat}, which corresponds to format String of &quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot; (see {@link java.text.DateFormat} for details of format Strings). &lt;p&gt; Note: whether this feature affects handling of other date-related types depend on handlers of those types, although ideally they should use this feature &lt;p&gt; Note: whether {@link java.util.Map} keys are serialized as Strings or not is controlled using {@link WRITE_DATE_KEYS_AS_TIMESTAMPS}. &lt;p&gt; Feature is enabled by default, so that datetime are by default serialized as timestamps." />
      <item value="duration" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="261" />
        <entry key="ENGLISH" value="262" />
        <entry key="IRISH" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="SLOVENIAN" value="1" />
        <entry key="SPANISH" value="3" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1663737607057" />
  </component>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1718782913663" />
  </component>
  <component name="Translation.Settings">
    <option name="translator" value="MICROSOFT" />
  </component>
  <component name="Translation.States">
    <histories>
      <item value="get Actual Maximum" />
      <item value="Tells about chunked encoding for this entity. The primary purpose of this method is to indicate whether chunked encoding should be used when the entity is sent. For entities that are received, it can also indicate whether the entity was received with chunked encoding. The behavior of wrapping entities is implementation dependent, but should respect the primary purpose. Returns: true if chunked encoding is preferred for this entity, or false if it is not" />
      <item value="spouse" />
      <item value="credit Result" />
      <item value="is termination" />
      <item value="register Shutdown Hook" />
      <item value="get Dealer Loan Data" />
      <item value="Quantity" />
      <item value="_get Resized Image" />
      <item value="_browse" />
      <item value="_abort" />
      <item value="initial Preview" />
      <item value="preview File Icon" />
      <item value="previewFileIcon: &quot;&lt;i class='glyphicon glyphicon-king'&gt;&lt;i&gt;&quot;," />
      <item value="Execute the annotated method with a fixed period between invocations. The time unit is milliseconds by default but can be overridden via timeUnit. Returns: the period" />
      <item value="initial Delay String" />
      <item value="mandatory" />
      <item value="cas.authn.jdbc.query[0].isolate-credential-username" />
      <item value="A problem occurred configuring root project 'cas'. &gt; Could not resolve all files for configuration ':classpath'. &gt; Could not resolve org.apereo.cas:cas-server-core-api-configuration-model:6.6.12. Required by: project : &gt; No matching variant of org.apereo.cas:cas-server-core-api-configuration-model:6.6.12 was found. The consumer was configured to find a runtime of a library compatible with Java 8, packaged as a jar, and its dependencies declared externally, as well as attribute 'org.gradle.plugin.api-version' with value '7.6' but: - Variant 'apiElements' capability org.apereo.cas:cas-server-core-api-configuration-model:6.6.12 declares a library, packaged as a jar, and its dependencies declared externally: - Incompatible because this component declares an API of a component compatible with Java 11 and the consumer needed a runtime of a component compatible with Java 8 - Other compatible attribute: - Doesn't say anything about org.gradle.plugin.api-version (required '7.6') - Variant 'runtimeElements' capability org.apereo.cas:cas-server-core-api-configuration-model:6.6.12 declares a runtime of a library, packaged as a jar, and its dependencies declared externally: - Incompatible because this component declares a component compatible with Java 11 and the consumer needed a component compatible with Java 8 - Other compatible attribute: - Doesn't say anything about org.gradle.plugin.api-version (required '7.6') &gt; Could not resolve org.apereo.cas:cas-server-core-configuration-metadata-repository:6.6.12. Required by: project : &gt; No matching variant of org.apereo.cas:cas-server-core-configuration-metadata-repository:6.6.12 was found. The consumer was configured to find a runtime of a library compatible with Java 8, packaged as a jar, and its dependencies declared externally, as well as attribute 'org.gradle.plugin.api-version' with value '7.6' but: - Variant 'apiElements' capability org.apereo.cas:cas-server-core-configuration-metadata-repository:6.6.12 declares a library, packaged as a jar, and its dependencies declared externally: - Incompatible because this component declares an API of a component compatible with Java 11 and the consumer needed a runtime of a component compatible with Java 8 - Other compatible attribute: - Doesn't say anything about org.gradle.plugin.api-version (required '7.6') - Variant 'runtimeElements' capability org.apereo.cas:cas-server-core-configuration-metadata-repository:6.6.12 declares a runtime of a library, packaged as a jar, and its dependencies declared externally: - Incompatible because this component declares a component compatible with Java 11 and the consumer needed a component compatible with Java 8 - Other compatible attribute: - Doesn't say anything about org.gradle.plugin.api-version (required '7.6')" />
      <item value="A problem occurred configuring root project 'cas'. &gt; Could not resolve all files for configuration ':classpath'. &gt; Could not resolve org.springframework.boot:spring-boot-gradle-plugin:3.2.0-M3. Required by: project : &gt; No matching variant of org.springframework.boot:spring-boot-gradle-plugin:3.2.0-M3 was found. The consumer was configured to find a library for use during runtime, compatible with Java 8, packaged as a jar, and its dependencies declared externally, as well as attribute 'org.gradle.plugin.api-version' with value '8.4' but: - Variant 'apiElements' capability org.springframework.boot:spring-boot-gradle-plugin:3.2.0-M3 declares a library, packaged as a jar, and its dependencies declared externally: - Incompatible because this component declares a component for use during compile-time, compatible with Java 17 and the consumer needed a component for use during runtime, compatible with Java 8 - Other compatible attribute: - Doesn't say anything about org.gradle.plugin.api-version (required '8.4') - Variant 'javadocElements' capability org.springframework.boot:spring-boot-gradle-plugin:3.2.0-M3 declares a component for use during runtime, and its dependencies declared externally: - Incompatible because this component declares documentation and the consumer needed a library - Other compatible attributes: - Doesn't say anything about its target Java version (required compatibility with Java 8) - Doesn't say anything about its elements (required them packaged as a jar) - Doesn't say anything about org.gradle.plugin.api-version (required '8.4') - Variant 'mavenOptionalApiElements' capability org.springframework.boot:spring-boot-gradle-plugin-maven-optional:3.2.0-M3 declares a library, packaged as a jar, and its dependencies declared externally: - Incompatible because this component declares a component for use during compile-time, compatible with Java 17 and the consumer needed a component for use during runtime, compatible with Java 8 - Other compatible attribute: - Doesn't say anything about org.gradle.plugin.api-version (required '8.4') - Variant 'mavenOptionalRuntimeElements' capability org.springframework.boot:spring-boot-gradle-plugin-maven-optional:3.2.0-M3 declares a library for use during runtime, packaged as a jar, and its dependencies declared externally:" />
      <item value="externally" />
      <item value="declared" />
      <item value="discharge" />
      <item value="exclusion" />
      <item value="Client not connected, current status:STARTING" />
      <item value="multiplication Table" />
      <item value="is Termination" />
      <item value="pretty Format" />
      <item value="execution" />
      <item value="Execute an update statement. The number of rows affected will be returned. @param statement Unique identifier matching the statement to execute. @param parameter A parameter object to pass to the statement. @return int The number of rows affected by the update." />
      <item value="upload Local" />
      <item value="upload Tripartite" />
      <item value="A mock implementation for BinaryLogClient, in order to unit test the connection and event handling logic" />
      <item value="test Exclude Schema Changes" />
      <item value="set Salesman Examine" />
      <item value="prefix" />
      <item value="Async Client" />
      <item value="auditor" />
      <item value="auditor Examine" />
      <item value="management" />
      <item value="engineering" />
      <item value="validation" />
      <item value="industries" />
      <item value="extra" />
      <item value="extras Two" />
      <item value="The &lt;em&gt;annotated classes&lt;em&gt; to use for loading an {@link org.springframework.context.ApplicationContext ApplicationContext}. Can also be specified using {@link ContextConfigurationclasses() @ContextConfiguration(classes=...)}. If no explicit classes are defined the test will look for nested {@link Configuration @Configuration} classes, before falling back to a {@link SpringBootConfiguration} search. @see ContextConfigurationclasses() @return the annotated classes used to load the application context" />
      <item value="CURDATE" />
      <item value="admission" />
      <item value="Direct" />
      <item value="supplementary" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="77" />
        <entry key="ENGLISH" value="78" />
        <entry key="SPANISH" value="1" />
      </map>
    </option>
  </component>
</application>